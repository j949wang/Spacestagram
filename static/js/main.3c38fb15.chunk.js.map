{"version":3,"sources":["components/card.js","components/cardContainer.js","components/title.js","config/particleConfig.js","components/particlesBackground.js","App.js","reportWebVitals.js","index.js"],"names":["Card","cardSpec","this","props","spec","Container","className","fluid","Row","Col","Image","src","url","title","date","explanation","Component","CardContainer","cards","console","log","mockData","i","length","push","id","Title","experience","document","getElementsByClassName","isFullySeen","el","getBoundingClientRect","window","scrollY","innerHeight","classList","add","onscroll","contains","remove","text","particlesConfig","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","retina_detect","ParticlesBackground","params","ParticleConfig","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c38fb15.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nclass Card extends Component {\n  render() {\n    let cardSpec = this.props.spec;\n    return (\n      <Container className=\"sectionContainer cardContainer\" fluid>\n        <Row className=\"cardRow\"> \n          <Col className=\"cardCol cardImage\" >\n            <Image src={cardSpec.url} fluid />\n          </Col>\n          <Col className=\"cardCol cardText\" >\n            <p className=\"cardTitle\">\n              {cardSpec.title}\n            </p>\n            <p className=\"positionTitle\">{cardSpec.date}</p>\n            <p className=\"cardInfo\">{cardSpec.explanation}</p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Card;","import React, { Component } from \"react\";\nimport Card from \"./card\";\nimport mockData from \"../config/mockData.json\"\n\n\nclass CardContainer extends Component {\n  // async componentDidMount() {\n  //   // const apiKey = \"ADOxAaPacqjeyA46jMLQcNnb3btfAM2hYldv2R6b\"\n  //   // const response = await fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}`)\n  //   // const data = await response.json()\n  //   // console.log(data)\n  // }\n  render() {\n    // let mockData = {  \"company\": {\n    //                     \"name\": \"NASA\",\n    //                     \"position\": \"Moon Image from NASA API\"\n    //                   },\n    //                   \"description\": \"Moon\",\n    //                 }\n    let cards = []\n    console.log(mockData)\n\n    for (let i = 0; i < mockData.length; i++) {\n      console.log(mockData[i])\n      cards.push(<Card spec={mockData[i]}/>)\n    }\n\n    return (\n        <div id=\"experienceContainer\">\n          {cards}\n        </div>\n    );\n  }\n}\n\nexport default CardContainer;","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nclass Title extends Component {\n  componentDidMount() {\n    const experience = document.getElementsByClassName(\"titleDescription\")[0]\n    const cards = document.getElementsByClassName(\"cardContainer\");\n\n    const isFullySeen = el => el &&\n    typeof el.getBoundingClientRect === 'function' &&\n    el.getBoundingClientRect()['bottom'] + window.scrollY <= \n      window.innerHeight + window.scrollY && \n    el.getBoundingClientRect()['top'] + window.scrollY <= \n    window.innerHeight + window.scrollY;\n\n    const isPartiallySeen = el => el &&\n    typeof el.getBoundingClientRect === 'function' &&\n    el.getBoundingClientRect()['top'] + window.scrollY + 50<= \n    window.innerHeight + window.scrollY;\n\n    if (isFullySeen(experience)) {\n      experience.classList.add(\"isVisible\")\n    }\n    \n    window.onscroll = () => {\n\n      if (isFullySeen(experience)) {\n        experience.classList.add(\"isVisible\")\n      } else if (experience.classList.contains(\"isVisible\")){\n        experience.classList.remove(\"isVisible\")\n      }\n\n      for (var i = 0; i < cards.length; i++) {\n        if (isPartiallySeen(cards[i])) {\n          cards[i].classList.add(\"isVisible\");\n        } else if (cards[i].classList.contains(\"isVisible\")) {\n          cards[i].classList.remove(\"isVisible\");\n        }\n      }\n    }\n\n  }\n\n  componentWillUnmount() {\n    window.onscroll = null;\n  }\n\n  render() {\n    return (\n      <Container id=\"experience\" className=\"sectionContainer\" fluid>\n        \n        <Row className=\"sectionTitle title\">{this.props.text}</Row>\n        <Row className=\"sectionTitle titleDescription\">Welcome to Spacestagram. Take a gander at our selection of photos. Leave a like and share! </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Title;","const particlesConfig = {\n    particles: {\n      number: {\n        value: 50,\n        density: {\n          enable: true,\n          value_area: 800\n        }\n      },\n      color: {\n        value: \"#ffffff\"\n      },\n      shape: {\n        type: \"circle\",\n        stroke: {\n          width: 0,\n          color: \"#000000\"\n        },\n        polygon: {\n          nb_sides: 5\n        },\n        image: {\n          src: \"img/github.svg\",\n          width: 100,\n          height: 100\n        }\n      },\n      opacity: {\n        value: 1,\n        random: true,\n        anim: {\n          enable: true,\n          speed: 1,\n          opacity_min: 0,\n          sync: false\n        }\n      },\n      size: {\n        value: 3,\n        random: true,\n        anim: {\n          enable: false,\n          speed: 4,\n          size_min: 0.3,\n          sync: false\n        }\n      },\n      line_linked: {\n        enable: false,\n        distance: 150,\n        color: \"#ffffff\",\n        opacity: 0.4,\n        width: 1\n      },\n      move: {\n        enable: true,\n        speed: 1,\n        direction: \"none\",\n        random: true,\n        straight: false,\n        out_mode: \"out\",\n        bounce: false,\n        attract: {\n          enable: false,\n          rotateX: 600,\n          rotateY: 600\n        }\n      }\n    },\n    interactivity: {\n      detect_on: \"canvas\",\n      events: {\n        onhover: {\n          enable: true,\n          mode: \"bubble\"\n        },\n        onclick: {\n          enable: true,\n          mode: \"repulse\"\n        },\n        resize: true\n      },\n      modes: {\n        grab: {\n          distance: 400,\n          line_linked: {\n            opacity: 1\n          }\n        },\n        bubble: {\n          distance: 250,\n          size: 0,\n          duration: 2,\n          opacity: 0,\n          speed: 3\n        },\n        repulse: {\n          distance: 250,\n          duration: 0.4\n        },\n        push: {\n          particles_nb: 4\n        },\n        remove: {\n          particles_nb: 2\n        }\n      }\n    },\n    retina_detect: true\n  };\n\nexport default particlesConfig","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\"\nimport ParticleConfig from \"../config/particleConfig\"\n\nclass ParticlesBackground extends Component {\n  render() {\n    return (\n        <Particles params={ParticleConfig}></Particles>\n    );\n  }\n}\n\nexport default ParticlesBackground","import CardContainer from \"./components/cardContainer\"\nimport './App.css';\nimport Title from './components/title';\nimport ParticlesBackground from \"./components/particlesBackground\";\n\nfunction App() {\n  return (\n    <div>\n      <ParticlesBackground />\n      <Title id=\"spaceTitle\" text={\"Spacestagram\"}/>\n      <CardContainer id=\"spaceContainer\"/>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './css/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}